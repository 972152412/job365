<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.soft.job.web.mapper.PositionMapper">
	<resultMap type="cn.soft.job.web.pojo.po.Position"
		id="BaseResultMap">
		<result property="id" column="position_id" javaType="Integer"
			jdbcType="BIGINT" />
		<result property="positionName" column="position_name"
			javaType="String" jdbcType="VARCHAR" />
		<result property="positionSalary" column="position_salary"
			javaType="String" jdbcType="VARCHAR" />
		<result property="positionAddress" column="position_address"
			javaType="String" jdbcType="VARCHAR" />
		<result property="positionDesc" column="position_desc"
			javaType="String" jdbcType="VARCHAR" />
		<result property="positionRequire" column="position_require"
			javaType="String" jdbcType="VARCHAR" />
		<result property="companyId" column="company_id" javaType="int"
			jdbcType="BIGINT" />
		<result property="positionPhone" column="position_phone"
			javaType="String" jdbcType="VARCHAR" />
		<result property="status" column="status" javaType="int"
			jdbcType="BIGINT" />
		<result property="createDate" column="create_date"
			javaType="Date" jdbcType="DATE" />
		<result property="updateDate" column="update_date"
			javaType="Date" jdbcType="DATE" />
		<result property="category1" column="position_category1"
			javaType="int" jdbcType="BIGINT" />
		<result property="category2" column="position_category2"
			javaType="int" jdbcType="BIGINT" />
	</resultMap>

	<sql id="Base_Column_List">
		position_id,
		position_name,position_salary,position_address,position_desc,position_require,company_id,position_phone,create_date,update_date,status
	</sql>

	<select id="getPositionList" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"></include>
		from position
		where status &lt;&gt; -1
		order by position_id desc
		limit
		#{start},#{limit}
	</select>

	<!-- 获取列表 -->
	<select id="getList" parameterType="java.util.Map"
		resultType="java.util.Map">

		select
		p.position_id as id,
		p.position_name as positionName,
		p.position_salary as positionSalary,
		p.position_address as
		positionAddress,
		p.position_desc as positionDesc,
		p.position_require as
		positionRequire,
		p.position_phone as positionPhone,

		p.create_date as
		createDate,
		p.update_date as updateDate,
		p.status as status,
		c.company_name as companyName
		from position p,company c where
		c.id=p.company_id and p.status &lt;&gt; -1

		<if test="positionName != null and positionName != '' ">
			and p.position_name like concat('%',#{positionName},'%')
		</if>
		<if
			test="startDate != null and startDate != '' and endDate != null and endDate != ''">
			and p.create_date &gt;= #{startDate}
			and p.create_date &lt;=
			#{endDate}
		</if>
		<if test="roleID == 2">
			and c.create_user_id=#{userID}
		</if>
		
		order by p.create_date desc
		LIMIT #{start}, #{limit}


	</select>

	<!-- 获取总记录条数 -->
	<select id="getCount" parameterType="java.util.Map"
		resultType="int">
		SELECT COUNT(*)
		from position p,company c where
		c.id=p.company_id and p.status &lt;&gt; -1

		<if test="positionName != null and positionName != '' ">
			and p.position_name like concat('%',#{positionName},'%')
		</if>
		<if
			test="startDate != null and startDate != '' and endDate != null and endDate != ''">
			and p.create_date &gt;= #{startDate}
			and p.create_date &lt;=
			#{endDate}
		</if>
		<if test="roleID == 2">
			and c.create_user_id=#{userID}
		</if>
		
	</select>



	<!-- 根据主键获取用户对象 -->
	<select id="getPositionById" parameterType="int"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"></include>
		from position
		where position_id = #{id,jdbcType=INTEGER};
	</select>


	<!-- 添加 -->
	<insert id="insert"
		parameterType="cn.soft.job.web.pojo.po.Position">
		insert into position (position_id, position_name,
		position_salary,
		position_address,position_desc,position_require,company_id,
		position_phone,create_date,update_date,status)
		values
		(#{id,jdbcType=BIGINT},
		#{positionName,jdbcType=VARCHAR},
		#{positionSalary,jdbcType=VARCHAR},
		#{positionAddress,jdbcType=VARCHAR},
		#{positionDesc,jdbcType=VARCHAR},
		#{positionRequire,jdbcType=VARCHAR},
		#{companyId,jdbcType=BIGINT},
		#{positionPhone,jdbcType=VARCHAR},
		#{createDate,jdbcType=TIMESTAMP},

		#{updateDate,jdbcType=TIMESTAMP},

		#{status,jdbcType=BIGINT})
	</insert>
	<!-- 修改 -->
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.soft.job.web.pojo.po.Position">
		update position
		<set>

			<if test="positionName != null">
				position_name = #{positionName,jdbcType=VARCHAR},
			</if>
			<if test="positionSalary != null">
				position_salary = #{positionSalary,jdbcType=VARCHAR},
			</if>
			<if test="positionAddress != null">
				position_address = #{positionAddress,jdbcType=VARCHAR},
			</if>
			<if test="positionDesc != null">
				position_desc = #{positionDesc,jdbcType=VARCHAR},
			</if>
			<if test="positionRequire != null">
				position_require = #{positionRequire,jdbcType=VARCHAR},
			</if>

			<if test="companyId != null">
				company_id = #{companyId,jdbcType=BIGINT},
			</if>

			<if test="positionPhone != null">
				position_phone = #{positionPhone,jdbcType=VARCHAR},
			</if>

			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>

			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>

			<if test="status != null">
				status = #{status,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where position_id = #{id,jdbcType=BIGINT}
	</update>


	<update id="shenhe" parameterType="java.util.Map">
		update position
		set status = 1
		where position_id= #{id,jdbcType=INTEGER}
	</update>

	<!-- 上架 -->
	<update id="start" parameterType="java.util.Map">
		update position
		set status = 2 ,
		create_date = #{date, jdbcType=TIMESTAMP}
		where position_id =
		#{id,jdbcType=INTEGER}
	</update>


	<!-- 资讯下架 -->
	<update id="stop" parameterType="int">
		update position
		set status = 0
		where position_id= #{id,jdbcType=INTEGER}
	</update>


	<!-- 删除单条记录 -->
	<delete id="deleteByPrimaryKey" parameterType="int">
		delete
		from
		position
		where position_id = #{id,jdbcType=INTEGER}
	</delete>


	<!-- 批量删除 -->
	<delete id="deleteBatch">
		delete from position
		where position_id in
		<foreach item="ids" index="index" collection="array" open="("
			separator="," close=")">
			#{ids}
		</foreach>
	</delete>
	<!-- 获取所有的职位 -->
	<select id="getAllPosition" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"></include>
		from position
		where status &lt;&gt; -1
		order by position_id desc
		limit
		#{start},#{limit}
	</select>

	<!-- 根据分类获取职位 -->
	<select id="getPositionByCate" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"></include>
		from position
		where status &lt;&gt; -1
		<if test="cate1 != 0">
			and position_category1 = #{cate1}
		</if>
		<if test="cate2 != 0">
			and position_category2 = #{cate2}
		</if>
		limit #{start},#{limit}
	</select>

	<!-- 根据分类获取职位数量 -->
	<select id="getCountByCate" resultType="int">
		select
		count(position_id)
		from position
		where status &lt;&gt; -1
		<if test="cate1 != 0">
			and position_category1 = #{cate1}
		</if>
		<if test="cate2 != 0">
			and position_category2 = #{cate2}
		</if>
	</select>

	<!-- 获取数量 -->
	<select id="getPositionCount" resultType="int">
		select
		count(position_id)
		from
		position
		where status &lt;&gt; -1
	</select>


</mapper>